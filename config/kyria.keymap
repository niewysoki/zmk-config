/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
	keymap {
		compatible = "zmk,keymap";

		BASE_LAYER {
			label = "Base";
			bindings = <
	// TOP LEFT (0 - 5)
		&none 
		&kp Q &kp W &kp F &kp P &kp B 

	// TOP RIGHT (6 - 11)
		&kp J &kp L &kp U &kp Y &kp SQT 
		&none

	// MIDDLE LEFT (12 - 17)
		&none 
		&hm LGUI A &hm LALT R &hm LCTL S &hm LSHFT T &kp G

	// MIDDLE RIGHT (18 - 23)
		&kp M &hm LSHFT N &hm LCTL E &hm LALT I &hm LGUI O 
		&none

	// BOTTOM LEFT (24 - 29)
		&none 
		&kp Z &hm RALT X &kp C &kp D &kp V
	
	// UPPER THUMB LEFT - RIGHT (30 - 33)
		&kp LSHFT &kp LSHFT &kp LSHFT &kp LSHFT

	// BOTTOM RIGHT (34 - 39)
		&kp K &kp H &kp COMMA &hm RALT DOT &kp FSLH 
		&none

	// THUMB LEFT (40 - 44)
		&kp LSHFT &kp LSHFT &kp ESC &kp SPACE &kp TAB

	// THUMB RIGHT (45 - 49)
		&kp RET &kp BSPC &kp DEL &kp LSHFT &kp LSHFT
			>;

			sensor-bindings = <
	// LEFT ENCODER
		&inc_dec_kp PG_UP PG_DN 
	// RIGHT ENCODER
		&inc_dec_kp PG_UP PG_DN
			>;	
		};
	};

	/ {
		behaviors {
			hm: homerow_mods {
				compatible = "zmk,behavior-hold-tap";
				label = "HOMEROW MODS";
				#binding-cells = <2>;
				tapping_term_ms = <150>;
				quick_tap_ms = <0>;
				flavor = "tap-preferred";
				bindings = <&kp>, <&kp>;
			};

			bhm: balanced_homerow_mods {
				compatible = "zmk,behavior-hold-tap";
				label = "BALANCED_HOMEROW_MODS";
				#binding-cells = <2>;
				tapping-term-ms = <200>;
				quick_tap_ms = <0>;
				flavor = "balanced";
				bindings = <&kp>, <&kp>;
        	};
		};
	};

	/ {
		combos {
			compatible = "zmk,combos";
			combo_lpar {
				timeout-ms = <50>;
				key-positions = <4 16>;
				bindings = <&kp LPAR>;
        	};

			combo_rpar {
				timeout-ms = <50>;
				key-positions = <7 19>;
				bindings = <&kp RPAR>;
			};

			combo_lbkt {
				timeout-ms = <50>;
				key-positions = <5 17>;
				bindings = <&kp LBKT>;
			};

			combo_rbkt {
				timeout-ms = <50>;
				key-positions = <6 18>;
				bindings = <&kp RBKT>;
			};
		};
	};

	&caps_word {
    	continue-list = <UNDERSCORE MINUS>;
		mods = <LSHFT>;
	};
};
